//Asci is of 7 bits
		//So range 2^7=128
		//Range from 0 to 127
		for (int i = 0; i <= 127; i++) {
			//%d numeric Values
			//%c character Values
			//printf For printing a format
			System.out.printf("%d : %c \n",i,i);
      ------------------------------------------
      public static void sort(int a[]) {
		for (int i = 0; i < a.length-1; i++) {
			for (int j = 0; j < a.length-1-i; j++) {
				if(a[j]<a[j+1]) {
					int b=a[j];
					a[j]=a[j+1];
					a[j+1]=b;
				}
			}
		}
    
		for (int i = 0; i < a.length; i++) {
			System.out.println(a[i]);
		}
	}
    -------------------
    ------------------------------------
    public static int randomNumberbetween(int a, int b) {
		return (int) (Math.random() * b + a);
	}
  ------------------------------------------------
  public static boolean numberPerfectorNot(int num) {

		int sum = 0;
		for (int i = 1; i < num; i++) {
			if (num % i == 0)
				sum = sum + i;
		}
		if (num == sum)
			return true;
		else
			return false;

	}
  ----------------
  public static int[] fibonaciSeries(int min,int max) {
		int arr[]=new int[max-1];
		arr[0]=min;
		arr[1]=min;
		for (int i =2 ; i <=max; i++) {
			arr[i]=arr[i-1]+arr[i-2];
			if(arr[i]>=max)break;
		}
		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);
		}
		return arr;		
	}
  ------------------------------------------------------
  public static List<Integer> fibonaciSeriesList(int min,int max) {
		List<Integer> list=new ArrayList<>();
		list.add(min);
		list.add(min);
		int a=min;
		int b=min;
		int c;
		for (int i = 0; i < max; i++) {
			c=a+b;
			if(c>=max)break;
			else
				list.add(c);
			a=b;
			b=c;
			
			
		}
    Iterator iterator=list.iterator();
		while (iterator.hasNext()){
			System.out.println(iterator.next());
		}
		return list;		
	}
  ---------------------------------------------------------
  public static int factorial(int num) {
		int m=1;
		for (int i = num; i >= 1; i--) {
			m=m*i;
		}
		System.out.println("Factorial of "+num+ " is:"+m);
		return m;
	}
  ---------------------------------------------------------
  public static void swap(int a,int b) {
		int m=a;
		int n=b;
		a=a+b;
		b=a-b;
		a=a-b;
		System.out.println("Previous a="+m+", b="+n+" . Now a="+a+", b="+b);
	}
  =======================================
  public static int[] sort(int arr[],String desc) {
		int a;
		int b;
		if(desc.toLowerCase().contains("ascending")) {
			for (int i = 0; i < arr.length-1; i++) {
//				if(arr[i]>arr[i+1]) {
//					arr[i]=arr[i]+arr[i+1];
//					arr[i+1]=arr[i]-arr[i+1];
//					arr[i]=arr[i]-arr[i+1];
//				}
				for (int k = 0; k < arr.length-i-1; k++) {
					if(arr[k]>arr[k+1]) {
						arr[k]=arr[k]+arr[k+1];
						arr[k+1]=arr[k]-arr[k+1];
						arr[k]=arr[k]-arr[k+1];
					}
          }
			}
		}else{
			for (int i = 0; i < arr.length-1; i++) {
				for (int k = 0; k < arr.length-i-1; k++) {
					if(arr[k]<arr[k+1]) {
						arr[k]=arr[k]+arr[k+1];
						arr[k+1]=arr[k]-arr[k+1];
						arr[k]=arr[k]-arr[k+1];
					}
				}
			}
		}
    for (int j = 0; j < arr.length; j++) {
			System.out.println(arr[j]);
		}
		return arr;	
	}
	---------------------------
  public static void reverseNumber(int num) {
		int actual=num;
		int s=0;
		int k=0;
		while (num>0) {
			k=num%10;
			s=s*10+k;
			num=num/10;	
		}
		
		System.out.println("Actual Number:"+actual+". Reversed Number: "+s);
		
	}
  ---------------------------------------------------------------------------------
  
