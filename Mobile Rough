TROUBLESHOOTING - IOS  ** BUNDLE ID --HOW TO GET THE BUNDLE ID OF IOS INBUILT APPS?
=========================================================================================

These are from iPhone 4S iOS 5.0.1
Camera:       com.apple.camera
AppStore:     com.apple.AppStore
Contacts:     com.apple.MobileAddressBook
Mail:         com.apple.mobilemail
GameCenter:   com.apple.gamecenter
MobileSafari: com.apple.mobilesafari
Preferences:  com.apple.Preferences
iPod:         com.apple.mobileipod
Photos:       com.apple.mobileslideshow
Calendar:     com.apple.mobilecal
Clock:        com.apple.mobiletimer						


TROUBLESHOOTING - HOW TO FIND A WEB APP//NATIVE APP //HYBRID APP
====================================================================
Hybrid App    installed with WebView Instrumentation
 
Xpath: (//input[@id="PlanContractNumber"])[1]
Locator: //*[@id="PlanContractNumber"]

Hybrid App    installed without WebView Instrumentation(Behaves as native app)
Xpath: //device/view/group[1]/group[1]/group[1]/group[1]/webview[1]
Object Locator: //*[@resourceid="android:id/content"]//*[@class="android.widget.LinearLayout"]/webview[1]


Datepicker without SendKeys:
==================================

public static void selectYear(String Xpath, String year){
 IOSElement element = (IOSElement) driver.findElementByXPath(Xpath);
 Integer yearInt = Integer.valueOf(year);
 String direction;
 if(Integer.valueOf(element.getAttribute("value").toString())<yearInt)
 direction = "UP";
 else direction = "DOWN";

 Point point = element.getCenter();
 int endx = point.getX();
 int endy;
 
 if(direction=="DOWN") endy = point.getY()-80;
 else endy = point.getY()+80;

 while(!(driver.findElementByXPath(Xpath).getAttribute("value").toString().contains(year)))
 ((IOSDriver)driver).tap(1, endx, endy, 1);
 }

TROUBLESHOOTING -  XPATH NOT WORKING(UNABLE TO CLICK)
==========================================================
•	Try for the Tap option[AndroidDriver (driver)]
driver.tap(fingers, element, duration);
driver.tap(fingers, x, y, duration);
Abdul’s Solution:
1.	Since you are trying to search element by its displayed text, there might be white space making mismatch. Please use normalize-space() function for xpath as shown you in the webEx.
2.	Since your element's attribute clickable is false please use tap method from AppiumDriver, as shown you in the WebEx.

If Clickable=true;
If Clickable=False; tap method

3.	Since your element is partially getting overlapped by checkbox, you can get the location of the element and add some digit to it to get away from overlap and use .tap method for location from AppiumDriver instance of the class.

Custom Solution:
1.	Use try Catch block and if exception is thrown once again perform the same operation inside catch block.
2.	Try with the Tap Method of Appium Driver
a.	driver.tap(fingers, element, duration);
b.	driver.tap(fingers, x, y, duration);
3.	Try to check  the visibility of an element from the very next page, if its not visible then perform the click operation once again.

TROUBLESHOOTING -  RESET APPLICATION DATA
=============================================
Driver.resetApp();


Custom Template - Sendkeys not working for when application is expecting from numeric Keyboard
===================================================================================================
I have looked in to this issue, this is an issue with Appium that when application is expecting from numeric Keyboard it will fail. Since numeric keyboard have different approach of providing value to the application(not key sequence).

Please check open defect on Appium: https://github.com/mozilla/geckodriver/issues/985 

Usually Appium takes a long time to fix the issue hence it is better to go with work around for now, I have implemented on work around for your issue, i.e. creating a method which can press the key as per key sequence. This is working good, please see execution video: https://www.screencast.com/t/hNZQIFxDm5 
  private static void sendNumericKeys(String keySequence){
       List<IOSElement> keyBoardList = driver.findElementsByClassName("XCUIElementTypeKey");
       HashMap<String,IOSElement> keyBoardMap = new HashMap<String,IOSElement>();
       for(IOSElement ele : keyBoardList){
              keyBoardMap.put(ele.getAttribute("label"), ele);
       }
       String[] keyArray = keySequence.split("(?!^)");
       for(String chr : keyArray){
              keyBoardMap.get(chr).click();
       }

Common Methods:
=================
public static void tabByCoordinates(AppiumDriver driver, WebElement element,int fingers,int duration){
	driver.tap(fingers, element, duration);
	}

public static void tabByElement(AppiumDriver driver, WebElement element,int fingers,int duration){
		Point point=element.getLocation();
		driver.tap(fingers, point.x, point.y, duration);
	}

public static void scrollToNativeElement1(AppiumDriver driver, WebElement element){
		driver.scrollTo(element.getText().toString());	
	}
 
 	public static void clickWebelement(WebElement element) throws InterruptedException{
		try {
			element.click();
		} catch (Exception e) {
			Thread.sleep(2000);
			element.click();
		}
	}

	public static void clickWebelementOther(AppiumDriver driver,WebElement elementToBeClicked, WebElement elementNextPage) throws InterruptedException{
			elementToBeClicked.click();
			if(!elementNextPage.isDisplayed()){
				Thread.sleep(2000);
				/*JavascriptExecutor js= JavascriptExecutor(driver);
				js.executeScript("Argument[0].setAttribute('visible','true')", elementToBeClicked);*/
				elementToBeClicked.click();
			}
		}

public static void clickOnElement(AppiumDriver driver,WebElement elementToBeClicked){		
		if ((boolean)elementToBeClicked.getAttribute("clickable").equalsIgnoreCase("false")) {
			JavascriptExecutor js=(JavascriptExecutor) driver;
			js.executeScript("Argument[0].setAttribute('clickable','true')", elementToBeClicked);
			}
		elementToBeClicked.click();
	}

public static void scrollToNativeElement(AppiumDriver driver, WebElement element){
		driver.scrollTo(element.getText().toString());
		//driver.scrollToExact(arg0)	
	}

public static void scrollToHalfScreensize(AppiumDriver driver,int startx, int starty, int endx, int endy, int duration){
		driver.swipe(startx, starty, endx, endy, duration);
	}

public static void swipeFromBottomToTop(AppiumDriver driver) throws InterruptedException{
		Dimension size=driver.manage().window().getSize();
		System.out.println("Size:"+size);
		
		  //Find starty point which is at bottom side of screen.
		  int starty = (int) (size.height * 0.80);
		  
		  //Find endy point which is at top side of screen.
		  int endy = (int) (size.height * 0.20);
		  
		  //Find horizontal point where you wants to swipe. It is in middle of screen width.
		  int startx = size.width / 2;
		
		  //Swipe from Bottom to Top.
		  driver.swipe(startx, starty, startx, endy, 1000);
		  Thread.sleep(2000);
		
	}

public static void swipeFromTopToBottom(AppiumDriver driver) throws InterruptedException{
		Dimension size=driver.manage().window().getSize();
		System.out.println("Size:"+size);
		
		  //Find starty point which is at bottom side of screen.
		  int starty = (int) (size.height * 0.80);
		  
		  //Find endy point which is at top side of screen.
		  int endy = (int) (size.height * 0.20);
		  
		  //Find horizontal point where you wants to swipe. It is in middle of screen width.
		  int startx = size.width / 2;
		
		  //Swipe from Bottom to Top.
		  driver.swipe(startx, endy, startx, starty, 1000);
		  Thread.sleep(2000);
		
	}
public static void swipeToNativeElement(AppiumDriver driver, WebElement elementStart,WebElement elementEnd,int duration ){
		int startx=driver.scrollTo(elementStart.getText()).getLocation().getX();
		int starty=driver.scrollTo(elementStart.getText()).getLocation().getY();;
		
		int endx=driver.scrollTo(elementEnd.getText()).getLocation().getX();
		int endy=driver.scrollTo(elementEnd.getText()).getLocation().getY();
		driver.swipe(startx, starty, endx, endy, duration);
		}}


